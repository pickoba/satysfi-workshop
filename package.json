{
  "name": "satysfi-workshop",
  "displayName": "SATySFi Workshop",
  "description": "Launguage support for SATySFi",
  "version": "1.4.0",
  "publisher": "pickoba",
  "repository": {
    "url": "https://github.com/pickoba/satysfi-workshop"
  },
  "icon": "vscode-satysfi.png",
  "galleryBanner": {
    "color": "#241435",
    "theme": "dark"
  },
  "engines": {
    "vscode": "^1.77.0"
  },
  "categories": [
    "Programming Languages",
    "Snippets",
    "Debuggers"
  ],
  "contributes": {
    "configuration": [
      {
        "title": "SATySFi",
        "properties": {
          "satysfi-workshop.executable": {
            "type": "string",
            "default": "satysfi",
            "title": "SATySFi Executable",
            "markdownDescription": "A path to the `satysfi` executable"
          },
          "satysfi-workshop.build.when": {
            "type": "string",
            "enum": [
              "never",
              "onSave"
            ],
            "default": "never",
            "title": "When to Build",
            "markdownDescription": "When to trigger automatic build"
          },
          "satysfi-workshop.build.buildOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [],
            "title": "Build Options",
            "markdownDescription": "Additional options to pass to the `satysfi` when build"
          },
          "satysfi-workshop.build.rootFile": {
            "type": "string",
            "default": "",
            "title": "Root File for Build",
            "markdownDescription": "The root .saty file to build a project. You do not need to set it if you have only one .saty file in your workspace."
          },
          "satysfi-workshop.typecheck.when": {
            "type": "string",
            "enum": [
              "never",
              "onSave",
              "onFileChange"
            ],
            "default": "onSave",
            "title": "When to perform a Type Check",
            "markdownDescription": "When to perform a type check automatically"
          },
          "satysfi-workshop.typecheck.buildOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "--full-path",
              "--type-check-only",
              "--bytecomp"
            ],
            "title": "Typecheck Build Options",
            "markdownDescription": "Additional options to pass to the `satysfi` when type check"
          },
          "satysfi-workshop.languageServer.enabled": {
            "type": "boolean",
            "default": false,
            "title": "Enable Language Server",
            "markdownDescription": "Enable the language server"
          },
          "satysfi-workshop.languageServer.path": {
            "type": "string",
            "default": "satysfi-language-server",
            "title": "Language Server Path",
            "markdownDescription": "The path to the language server executable"
          },
          "satysfi-workshop.packageCompletion.enabled": {
            "type": "boolean",
            "default": true,
            "title": "Enable Package Completion",
            "markdownDescription": "Enable package/file completion on @require and @import"
          },
          "satysfi-workshop.packageCompletion.searchPath": {
            "type": "string",
            "default": "",
            "title": "Package Search Path",
            "markdownDescription": "The path to search packages for completion. Leave empty to use default."
          },
          "satysfi-workshop.mathPreview.when": {
            "type": "string",
            "enum": [
              "never",
              "onHover"
            ],
            "default": "never",
            "title": "When to show a math preview",
            "markdownDescription": "When to show a math preview"
          },
          "satysfi-workshop.mathPreview.buildOptions": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "default": [
              "--full-path"
            ],
            "title": "Math Preview Build Options",
            "markdownDescription": "Additional options to pass to the `satysfi` when math preview"
          },
          "satysfi-workshop.mathPreview.template": {
            "type": "string",
            "default": "",
            "title": "Template File for Math Preview",
            "markdownDescription": "A path to a template file (.saty) for math preview. Leave empty to use the internal one."
          },
          "satysfi-workshop.mathPreview.pdf2svg": {
            "type": "string",
            "default": "pdf2svg",
            "title": "A path to the `pdf2svg` executable"
          }
        }
      }
    ],
    "languages": [
      {
        "id": "satysfi",
        "aliases": [
          "SATySFi",
          "satysfi"
        ],
        "extensions": [
          ".saty",
          ".satyh",
          ".satyg"
        ],
        "filenamePatterns": [
          "*.satyh-*"
        ],
        "configuration": "./language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "satysfi",
        "scopeName": "text.saty.satyh",
        "path": "./syntaxes/satysfi.tmLanguage.json",
        "balancedBracketScopes": [
          "punctuation.definition",
          "punctuation.parenthesis"
        ]
      }
    ],
    "snippets": [
      {
        "language": "satysfi",
        "scopeName": "text.saty.satyh",
        "path": "./snippets/satysfi.json"
      }
    ],
    "commands": [
      {
        "command": "satysfi-workshop.build",
        "title": "Build SATySFi Project",
        "category": "SATySFi",
        "icon": "$(debug-start)"
      },
      {
        "command": "satysfi-workshop.typecheck",
        "title": "TypeCheck Current Document",
        "category": "SATySFi"
      },
      {
        "command": "satysfi-workshop.openBuildLog",
        "title": "Open SATySFi Build Log",
        "category": "SATySFi"
      },
      {
        "command": "satysfi-workshop.restartLanguageServer",
        "title": "Restart Language Server",
        "category": "SATySFi"
      }
    ],
    "keybindings": [
      {
        "key": "ctrl+alt+b",
        "mac": "cmd+alt+b",
        "command": "satysfi-workshop.build",
        "when": "editorLangId == satysfi"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "when": "editorLangId == satysfi",
          "command": "satysfi-workshop.build",
          "group": "navigation"
        }
      ]
    }
  },
  "activationEvents": [
    "onLanguage:satysfi"
  ],
  "main": "./out/extension",
  "scripts": {
    "vscode:prepublish": "npm run build -- --minify",
    "build": "node esbuild.mjs",
    "build:tree-sitter": "mkdir -p parsers && cd parsers && cp ../node_modules/web-tree-sitter/tree-sitter.wasm . && tree-sitter build-wasm ../node_modules/tree-sitter-satysfi",
    "watch": "npm run build -- --watch",
    "lint": "npm run lint:eslint && npm run lint:prettier",
    "lint:eslint": "eslint .",
    "lint:prettier": "prettier --check .",
    "fix": "npm run fix:prettier && npm run fix:eslint",
    "fix:eslint": "npm run lint:eslint -- --fix",
    "fix:prettier": "npm run lint:prettier -- --write",
    "pretest": "npm run build",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^7.2.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^16.18.23",
    "@types/vscode": "^1.77.0",
    "@typescript-eslint/eslint-plugin": "^5.57.1",
    "@typescript-eslint/parser": "^5.57.1",
    "@vscode/test-electron": "^2.3.0",
    "esbuild": "^0.17.15",
    "eslint": "^8.38.0",
    "eslint-config-prettier": "^8.8.0",
    "mocha": "^10.2.0",
    "prettier": "^2.8.7",
    "tree-sitter-cli": "^0.20.7",
    "tree-sitter-satysfi": "github:monaqa/tree-sitter-satysfi",
    "typescript": "^4.9.5"
  },
  "dependencies": {
    "vscode-languageclient": "^8.1.0",
    "web-tree-sitter": "^0.20.7",
    "zod": "^3.22.3"
  }
}
